Optionen
========

-OptionsDialog.class hinzugefügt
-Verbesserungen der Attribute, Resistenzen und deren Implementierung
-Ressource.class hinzugefügt für Ressourcen, die Entities nutzen können
-Drop.class vereinheitlicht, sodass sie für alles verwendet werden kann
-Kombinationen überarbeitet
-KritischerTreffer.class hinzugefügt und implementiert, sodass er von Entities berücksichtigt wird
-Fehler behoben, bei dem der Plural von Gegenständen falsch angezeigt wurde in der InventarAnzeige
-KombinationsGUI.class aktualisiert, sie unterstützt jetzt eine größere Freiheit beim kombinieren von Gegenständen und die Möglichkeit von 1 Edukt Kombinationen
-KombinationsGUI.class Aussehen wurde komplett überarbeitet


Ereignisse globalisieren
========================

-neues Package game.logic.Ereginis
-Ereignis.class in das Package verschoben
+ist jetzt abstract
-IEreignis.class, OrtEreignis.class, UntersuchbaresObjektEreginis.class, KommandoGegenstand.class und   OrtAddKommandoGegenstandAktion.class gelöscht
+daraus entstehende Fehler behoben
-Ausgabe fuer Aktionen entfernt, kann jetzt nur noch mit der AusgabeAktion.class realisiert werden
+alle Aktionen angepasst
-Ereignis Konstruktor geändert, der Zähler wird hier bereits festgelegt.
-OrtBetretenEreignis.class hinzugefügt
-kleinere Änderungen bei eigenen Kommandos
-neues Ereignis System in SpielWelt integriert
-UntersuchungsEreignis.class hinzugefügt
-es werden mehr Farben angezeigt, bei mehreren Methoden
+es gibt einen Bug, der aber nicht sehr dramatisch ist, aber noch nicht behoben, beim Ausrüsten von zwei gleichnamigen Waffen, die BEIDHAENDIG sind, wird die Waffe ersetzt und die zurückgegebene Waffe nicht wieder dem Inventar hinzugefügt
-Ausruestung überarbeitet und ein paar Methoden verbessert oder gelöscht
-Gegenstand überschreibt die equals() Methode
-AusruestungsAnzeige.class hinzugefügt, sie zeigt die Ausrüstung des Spielers an
-kleine Änderungen in GUI, SpielWelt, Spieler und Ausruestung, sodass die Anzeige funktioniert
-Wegwerfen Kommando hinzugefügt für Gegenstände, sie können an Orten abgelegt werden und da später wieder mitgenommen werden, die Anzahl kann sogar genau festgelegt werden mit "wirf x Gegenstand weg", "lass x Gegenstand fallen", "lass x Gegenstand liegen"


Korrektur der Formatierung und Methoden aufräumen
=================================================

Ausgang.class:
 -formatiert und Autor hinzugefügt
 -Umlaute korrigiert
 -Undefiniert(0) in Eigene umbennant, da es jetzt dafür verwendet wird eigene Richtungen zu erstellen
 -neuer Konstruktor hinzugefügt: Ausgang(String richtungsName, String abkuerzung, byte richtung, Ort zielort)
 -Methode entfernt: void setRichtungUnabhaengig(byte richtung)

Behaelter.class:
 -formatiert und Autor hinzugefügt
 -unnötige geschweifte Klammern entfernt

Drop.class:
 -formatiert und Autor hinzugefügt
 -Variable umbennant: Stapel[] loot in gegenstaende
 -Methode umbennant: Stapel[] getLoot() in getGegenstaende()

IEreignis.class:
 -formatiert und Autor hinzugefügt
 -Beschreibungen geändert

KombinierungsEinrichtung.class:
 -formatiert und Autor hinzugefügt
 -Beschreibungen hinzugefügt

Kommando.class:
 -formatiert und Autor hinzugefügt
 -Umlaute korrigiert
 -Methode entfernt: static String getBefehl(Kommando kommando)
 -Methode entfernt: String getBefehl()

Ort.class:
 -formatiert und Autor hinzugefügt
 -Umlaute korrigiert
 -kleinere Änderungen innerhalb der Methodenstruktur
 -Parameter Methoden Inhalt auskommentiert
  -neu Gestaltung der Parameter Methoden(keine switch(String)-Anweisungen mehr)
 -Methode umbennant: boolean istBesucht() in isBesucht()
 -Methode umbennant: boolean istNPCda() int isNPCda()

RessourcenPunkt.class:
 -formatiert und Autor hinzugefügt

SpielTest.class:
 -Klasse umbennant: SpielTest.class in Interpreter.class
 -formatiert und Autor hinzugefügt
 -Umlaute korrigiert
 -unnötige geschweifte Klammern entfernt

SpielWelt.class:
 -formatiert und Autor hinzugefügt
 -Methode umbennant: void updateGegenstandsListe() in updateListen()
 -Methode umbennant: Ort aktuellePosition() in getAktuellePosition()
 -auskommentierten Code entfernt
 -spielerPosition ist jetzt private
 -kleinere Änderungen bei der Ausgabe von manchen Methoden

Tuer.class:
 -formatiert und Autor hinzugefügt

UntersuchbaresObjekt.class:
 -formatiert und Autor hinzugefügt
 -Parameter Methoden Inhalt auskommentiert

UntersuchbaresObjektEreignis.class:
 -formatiert und Autor hinzugefügt
 -Beschreibungen vervollständigt

Kampf.class:
 -formatiert und Autor hinzugefügt

KampfAktion.class:
 -formatiert und Autor hinzugefügt
 -Methode umbenannt: boolean istGueltigeAktion() in isGueltigeAktion()

KampfEffekt.class:
 -formatiert und Autor hinzugefügt
 -auskommentierte Methode gelöscht

Attribut.class:
 -formatiert und Autor hinzugefügt

Effekt.class:
 -formatiert und Autor hinzugefügt

Entity.class:
 -formatiert und Autor hinzugefügt

EntityAttribut.class:
 -formatiert und Autor hinzugefügt

EntityDamageAmplifier.class:
 -formatiert und Autor hinzugefügt

EntityResistenz.class:
 -formatiert und Autor hinzugefügt

Faehigkeit.class:
 -formatiert und Autor hinzugefügt

Gegner.class:
 -formatiert und Autor hinzugefügt

Gegnerart.class:
 -formatiert und Autor hinzugefügt
 -gelöscht

Level.class:
 -formatiert und Autor hinzugefügt

Resistenz.class:
 -formatiert und Autor hinzugefügt
 -auskommentierte Methode gelöscht

Schadensart.class:
 -formatiert und Autor hinzugefügt
 -auskommentierte Methode gelöscht

Spieler.class:
 -formatiert und Autor hinzugefügt
 -unnötige geschweifte Klammern entfernt

Accessoire.class:
 -Klasse umbennant: Accesoire.class in Accessoire.class (Schreibfehler)
 -extended nicht mehr Gegenstand.class sondern AusruestbarerGegenstand.class
 -formatiert und Autor hinzugefügt
 -Beschreibungen hinzugefügt

AusruestbarerGegenstand.class:
 -hinzugefügt und erweitert Gegenstand.class
 -hier werden jetzt alle Werte und Attribute gespeichert und nicht mehr in Gegenstand.class

Gegenstand.class:
 -Variablen und Methoden in AusruestbarerGegenstand.class abgegeben, die Werte betreffen
  -int lp
  -int mp
  -EntityAttribut[] attribut
  -EntityResistenz[] resistenzen
  -int getAttribut(String nameOderParam)
  -float getResistenz(String nameOderParam)
  -Gegenstand addResistenz(Schadensart schadensart, float wert)
  -int getLp()
  -int getMp()
  -EntityAttribut[] getAttribute()
  -EntityResistenz[] getResistenzen()
  -boolean hasWerte()
 -Parameter Methoden aktualisiert

Ruestung.class:
 -extended AusruestbarerGegenstand.class anstatt Gegenstand.class
 -formatiert und Autor hinzugefügt
 -Beschreibungen hinzugefügt

Waffe.class:
 -extended AusruestbarerGegenstand.class anstatt Gegenstand.class
 -formatiert und Autor hinzugefügt
 -Beschreibungen hinzugefügt


Anzeige.class:
 -formatiert und Autor hinzugefügt
 -Konstruktor geändert: Anzeige() in Anzeige(int breite, int hoehe)


Farbe.class:
 -formatiert und Autor und Beschreibung hinzugefügt

FarbigeSchrift.class:
 -gelöscht

IPrintable.class:
 -formatiert und Autor hinzugefügt
 -Methode umbenannt: String getDescription() int getBeschreibung()